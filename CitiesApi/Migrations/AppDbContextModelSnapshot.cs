// <auto-generated />
using CitiesApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CitiesApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CitiesApi.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            Description = "The one with that big park.",
                            Name = "New York City"
                        },
                        new
                        {
                            CityId = 2,
                            Description = "The one with the cathedral that was never really finished.",
                            Name = "Antwerp"
                        },
                        new
                        {
                            CityId = 3,
                            Description = "The one with that big tower.",
                            Name = "Paris"
                        });
                });

            modelBuilder.Entity("CitiesApi.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("PointOfInterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PointOfInterestId"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PointOfInterestId");

                    b.HasIndex("CityId");

                    b.ToTable("PointOfInterests");

                    b.HasData(
                        new
                        {
                            PointOfInterestId = 1,
                            CityId = 1,
                            Description = "A large city park in the heart of Manhattan.",
                            Name = "Central Park"
                        },
                        new
                        {
                            PointOfInterestId = 2,
                            CityId = 1,
                            Description = "A 102-story skyscraper with amazing views.",
                            Name = "Empire State Building"
                        },
                        new
                        {
                            PointOfInterestId = 3,
                            CityId = 2,
                            Description = "A stunning Gothic cathedral.",
                            Name = "Cathedral of Our Lady"
                        },
                        new
                        {
                            PointOfInterestId = 4,
                            CityId = 2,
                            Description = "One of the oldest zoos in the world.",
                            Name = "Antwerp Zoo"
                        },
                        new
                        {
                            PointOfInterestId = 5,
                            CityId = 3,
                            Description = "The iconic iron tower.",
                            Name = "Eiffel Tower"
                        },
                        new
                        {
                            PointOfInterestId = 6,
                            CityId = 3,
                            Description = "The world’s largest art museum.",
                            Name = "Louvre Museum"
                        });
                });

            modelBuilder.Entity("CitiesApi.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CitiesApi.Entities.City", "city")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("CitiesApi.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
